/*
 * This file is automatically generated by AzuraCast.
 * To update it, run:
 * `backend/bin/console azuracast:dev:ts`
 */

export const AudioProcessingMethods = Object.freeze({
    None: "none",
    Liquidsoap: "nrj",
    MasterMe: "master_me",
    StereoTool: "stereo_tool",
} as const);
export type AudioProcessingMethodsEnum = (typeof AudioProcessingMethods)[keyof typeof AudioProcessingMethods];

export const BackendAdapters = Object.freeze({ Liquidsoap: "liquidsoap", None: "none" } as const);
export type BackendAdaptersEnum = (typeof BackendAdapters)[keyof typeof BackendAdapters];

export const FrontendAdapters = Object.freeze({
    Icecast: "icecast",
    Shoutcast: "shoutcast2",
    Rsas: "rsas",
    Remote: "remote",
} as const);
export type FrontendAdaptersEnum = (typeof FrontendAdapters)[keyof typeof FrontendAdapters];

export const RemoteAdapters = Object.freeze({
    Shoutcast1: "shoutcast1",
    Shoutcast2: "shoutcast2",
    Icecast: "icecast",
    AzuraRelay: "azurarelay",
} as const);
export type RemoteAdaptersEnum = (typeof RemoteAdapters)[keyof typeof RemoteAdapters];

export const WebhookTriggers = Object.freeze({
    SongChanged: "song_changed",
    SongChangedLive: "song_changed_live",
    ListenerGained: "listener_gained",
    ListenerLost: "listener_lost",
    LiveConnect: "live_connect",
    LiveDisconnect: "live_disconnect",
    StationOffline: "station_offline",
    StationOnline: "station_online",
} as const);
export type WebhookTriggersEnum = (typeof WebhookTriggers)[keyof typeof WebhookTriggers];

export const WebhookTypes = Object.freeze({
    Generic: "generic",
    Email: "email",
    TuneIn: "tunein",
    RadioDe: "radiode",
    RadioReg: "radioreg",
    GetMeRadio: "getmeradio",
    Discord: "discord",
    Telegram: "telegram",
    GroupMe: "groupme",
    Mastodon: "mastodon",
    Bluesky: "bluesky",
    GoogleAnalyticsV4: "google_analytics_v4",
    MatomoAnalytics: "matomo_analytics",
} as const);
export type WebhookTypesEnum = (typeof WebhookTypes)[keyof typeof WebhookTypes];
